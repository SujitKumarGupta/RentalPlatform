<div class="chatbot-container">
    <div class="chatbot-icon" id="chatbot-icon">üí¨</div>
    <div class="chatbox" id="chatbox">
        <div class="chatbox-header">Wanderlust AI Chatbot</div>
        <div class="chatbox-messages" id="chatbox-messages"></div>
        <div class="chatbox-input">
            <input type="text" id="chat-input" placeholder="Type a message...">
            <button id="send-button" onclick="sendMessage()">Send</button>
            <span id="stop-button" class="stop-icon" onclick="stopTyping()">üü• Stop</span>
        </div>
    </div>
</div>

<script>
let typingTimeout;
let stopRequested = false;

document.getElementById('chatbot-icon').addEventListener('click', function () {
    const chatbox = document.getElementById('chatbox');
    chatbox.style.display = chatbox.style.display === 'none' || chatbox.style.display === '' ? 'block' : 'none';

    const messages = document.getElementById('chatbox-messages');
    if (messages.innerHTML.trim() === '') {
        messages.innerHTML += `<div class="bot-message">
        <div class="profile-icon">ü§ñ</div>
        <div class="message-content">Hello! I'm Wanderlust Bot. üåç<br>
        ‚û§ Hotel Bookings üè®<br>
        ‚û§ Travel Recommendations ‚úàÔ∏è<br>
        ‚û§ Local Attractions & Guides üó∫Ô∏è<br>
        ‚û§ Customer Support üí¨<br>
        How can I help you today?</div>
        </div>`;
    }
});

function typeEffect(element, text, delay = 50, callback) {
    let index = 0;
    stopRequested = false;
    const stopButton = document.getElementById('stop-button');
    stopButton.style.display = 'inline-block'; // Show Stop button

    function type() {
        if (stopRequested) {
            element.innerHTML += " <i>(Typing stopped)</i>";
            stopButton.style.display = 'none'; // Hide Stop button
            return;
        }
        if (index < text.length) {
            element.innerHTML += text.charAt(index);
            index++;
            typingTimeout = setTimeout(type, delay);
        } else if (callback) {
            callback();
            stopButton.style.display = 'none'; // Hide Stop button after completion
        }
    }
    type();
}

function stopTyping() {
    stopRequested = true;
    clearTimeout(typingTimeout);
    document.getElementById('stop-button').style.display = 'none';
    document.getElementById('send-button').disabled = false; // Re-enable Send button
    document.getElementById('send-button').style.opacity = '1';
}

async function sendMessage() {
    const input = document.getElementById('chat-input');
    const sendButton = document.getElementById('send-button');
    const messages = document.getElementById('chatbox-messages');
    const messageText = input.value.trim();

    if (!messageText) return;

    sendButton.disabled = true;
    sendButton.style.opacity = '0.5';

    messages.innerHTML += `
    <div class="user-message">
        <div class="message-content">You: ${messageText}</div>
        <div class="profile-icon">üßë</div>
    </div>`;
    input.value = '';

    try {
        const response = await fetch('/chatbot-response', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ message: messageText })
        });
        const data = await response.json();

        const botMessage = document.createElement('div');
        botMessage.className = 'bot-message';
        botMessage.innerHTML = `<div class="profile-icon">ü§ñ</div><div class="message-content"></div>`;
        messages.appendChild(botMessage);

        const messageContent = botMessage.querySelector('.message-content');
        typeEffect(messageContent, `Bot: ${data.reply}`, 50, () => {
            sendButton.disabled = false;
            sendButton.style.opacity = '1';
        });
    } catch (error) {
        messages.innerHTML += `<div class="bot-message"><div class="profile-icon">‚ö†Ô∏è</div><div class="message-content">Error: Failed to connect to chatbot</div></div>`;
        console.error("Chatbot error:", error);
        sendButton.disabled = false;
        sendButton.style.opacity = '1';
    }
    messages.scrollTop = messages.scrollHeight;
}

document.getElementById('chat-input').addEventListener('keypress', function (event) {
    if (event.key === 'Enter') {
        event.preventDefault();
        sendMessage();
    }
});
</script>

<style>
/*  */
.stop-icon {
    display: none; /* Hide by default */
    position: absolute;
    top: -35px; /* Adjust above the input field */
    left: 50%; /* Move to center */
    transform: translateX(-50%); /* Center it properly */
    color:black;
    font-size: 14px;
    cursor: pointer;
    font-weight: bold;
    border: 1px solid rgba(0, 0, 0, 0.2);
    background: rgba(243, 225, 225, 0.6); 
}

</style>
