<style>
  .btn-search {
    background-color: #fe424d;
    color: #fff;
    border-radius: 25px;
    padding: 0rem 1rem;
  }

  .btn-search:hover {
    background-color: #fe424d;
    color: #fff;
  }

  .btn-search i {
    display: inline;
    margin-right: 0.5rem;
  }

  .search-inp {
    border-radius: 25px;
    padding: 0.5rem 0.7rem;
    font-size: 0.8rem;
    width: 320px; /* Default width */
    box-sizing: border-box; /* Ensure padding doesn't cause overflow */
  }

  .suggestions-container {
    position: relative;
    width: 320px; /* Default width */
  }

  .suggestions {
    list-style-type: none;
    padding: 0;
    margin: 0;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    position: absolute;
    top: 100%; /* Position the suggestions below the input */
    left: 0;
    right: 0;
    max-height: 200px;
    overflow-y: auto;
    z-index: 1000;
  }

  .suggestions .suggestion-item {
    padding: 10px;
    cursor: pointer;
    box-shadow: 0 2px 7px rgba(0, 0, 0, 0.1);  }

  .suggestions .suggestion-item:hover {
    background-color: #f0f0f0;
  }

  /* Media Query for Small Screens */
  @media (max-width: 576px) {
    .navbar-collapse {
      background-color: #f8f9fa; /* Ensure it stays light */
      padding: 1rem;
    }
    .search-inp {
      width: 95%; /* Full width for small screens */
      font-size: 0.9rem; /* Adjust font size for better fit */
    }

    .suggestions-container {
      width: 190%; /* Match the input's width */
    }

    .btn-search {
      font-size: 0.8rem; /* Adjust button size */
      padding: 0.4rem 0.8rem; /* Smaller padding for small screens */
    }
  }
</style>

<nav class="navbar navbar-expand-md bg-body-tertiary border-bottom sticky-top">
  <div class="container-fluid">
    <a class="navbar-brand" href="/listings">
      <i class="fa-regular fa-compass"></i> StayBuddy
    </a>
    <button
      class="navbar-toggler"
      type="button"
      data-bs-toggle="collapse"
      data-bs-target="#navbarNavAltMarkup"
      aria-controls="navbarNavAltMarkup"
      aria-expanded="false"
      aria-label="Toggle navigation"
    >
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
      <div class="navbar-nav">
        <a class="nav-link" href="/listings">Explore</a>
      </div>
      <div class="navbar-nav ms-auto">
        <form class="d-flex" role="search" id="searchForm">
          <div class="suggestions-container">
            <input
              class="form-control me-2 search-inp"
              type="search"
              id="searchInput"
              name="query"
              placeholder="Search destination"
              aria-label="Search"
              autocomplete="off"
            />
            <div id="suggestionsList" class="suggestions"></div>
          </div>
          <button class="btn btn-search" type="submit">
            <i class="fa-solid fa-magnifying-glass"></i>Search
          </button>
        </form>
      </div>
      <div class="navbar-nav ms-auto">
        <a class="nav-link" href="/listings/new">Add your Home</a>
        <% if(!curuser) { %>
        <a class="nav-link active" href="/signup"><b>Signup</b></a>
        <a class="nav-link" href="/login"><b>Login</b></a>
        <% } %>
        <% if(curuser) { %>
          <div class="nav-link nav-user">
            <i class="fa-regular fa-circle-user"></i>
            <%= curuser.username %>
          </div>
        <a class="nav-link" href="/logout"><b>Logout</b></a>
        <% } %>
      </div>
    </div>
  </div>
</nav>

<script>
  const searchInput = document.getElementById('searchInput');
  const suggestionsList = document.getElementById('suggestionsList');

  searchInput.addEventListener('input', async function () {
    const query = searchInput.value.trim();

    if (query === '') {
      suggestionsList.innerHTML = ''; // Clear suggestions if input is empty
      return;
    }

    try {
      const response = await fetch(`/listings/suggestions?query=${query}`);
      const suggestions = await response.json();

      suggestionsList.innerHTML = ''; // Clear previous suggestions

      if (suggestions.length > 0) {
        suggestions.forEach((suggestion) => {
          const div = document.createElement('div');
          div.classList.add('suggestion-item');
          div.textContent = suggestion.title; // Assuming 'title' is what you want to show
          div.addEventListener('click', () => {
            // Handle suggestion click
            searchInput.value = suggestion.title;
            suggestionsList.innerHTML = ''; // Clear suggestions
          });
          suggestionsList.appendChild(div);
        });
      } else {
        suggestionsList.innerHTML = '<div class="suggestion-item">No suggestions found</div>';
      }

      // Auto-scroll the suggestions list
      suggestionsList.scrollTop = suggestionsList.scrollHeight;
    } catch (error) {
      console.error('Error fetching suggestions:', error);
      suggestionsList.innerHTML = '<div class="suggestion-item">Error fetching suggestions</div>';
    }
  });

  document.getElementById('searchForm').addEventListener('submit', function (event) {
    event.preventDefault();
    // Handle form submission logic
    window.location.href = `/listings/search?query=${searchInput.value}`;
  });
</script>
